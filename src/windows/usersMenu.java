/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;


import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rrhh.ConnectionDB;
import rrhh.Render;
import rrhh.Validations;


/**
 *
 * @author Emmanuel
 */
public class usersMenu extends javax.swing.JPanel {

    /**
     * Creates new form usersMenu
     */
    public usersMenu() {
        initComponents();
        CargarTabla("SP_Search_Active_Users");
        loadInactiveUsers();   
    }
    
    public void loadInactiveUsers(){
        inactiveUsers.setDefaultRenderer(Object.class, new Render());
        DefaultTableModel modelo = (DefaultTableModel) inactiveUsers.getModel();
        inactiveUsers.setRowHeight(20);
        
        //Comienza a contas 0 los renglones
        modelo.setRowCount(0);
        
        ConnectionDB conexion = new ConnectionDB();
        conexion.getConnection();
        
        ResultSet res = ConnectionDB.Query("SELECT * FROM users WHERE active_us = "+0);
        try{
            while(res.next()){
                JButton btnActivate = new JButton("Activate");
                btnActivate.setBackground(Color.BLUE);
                btnActivate.setName("btnActivate");
                
                Vector v = new Vector();
                v.add(res.getInt(1));
                v.add(res.getString(2));
                v.add(res.getString(3));
                v.add(res.getString(4));
                v.add(btnActivate);
                
                modelo.addRow(v);
                inactiveUsers.setModel(modelo);
                
            }
        }catch(SQLException e){
        }
    }
    
    public void CargarTabla(String query){
        actUsTa.setDefaultRenderer(Object.class, new Render());
        DefaultTableModel modelo = (DefaultTableModel) actUsTa.getModel();
        actUsTa.setRowHeight(20);
        //Comienza a contar 0 los renglones
        modelo.setRowCount(0);
        
        ConnectionDB conexion = new ConnectionDB();
        conexion.getConnection();

        ResultSet res = ConnectionDB.Query(query); 
        try{
            while(res.next()){
                JButton btnDelete = new JButton("Delete");
                btnDelete.setBackground(Color.red);
                btnDelete.setName("btnDelete");

                JButton btnUpdate = new JButton("Update");
                btnUpdate.setBackground(Color.green);   
                btnUpdate.setName("btnUpdate");
                
                JButton btnDeactivate = new JButton("Deactivate");
                btnDeactivate.setBackground(Color.BLUE);
                btnDeactivate.setName("btnDeactivate");
                
                Vector v = new Vector();
                v.add(res.getInt(1));
                v.add(res.getString(2));
                v.add(res.getString(3));
                v.add(res.getString(4));
                v.add(btnDelete);
                v.add(btnUpdate);
                v.add(btnDeactivate);
                modelo.addRow(v);

                actUsTa.setModel(modelo);
            }
        }
        catch(SQLException e){

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Table = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        username = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        cpassword = new javax.swing.JPasswordField();
        roleList = new javax.swing.JComboBox<>();
        registerButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        actUsTa = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        inactiveUsers = new javax.swing.JTable();
        buscarIdTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        buscarID = new javax.swing.JButton();
        buscarNombreTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        buscarNombre = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        showAllUsersBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Table.setBackground(new java.awt.Color(255, 255, 255));
        Table.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Username");
        Table.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 70, -1, -1));

        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(username);

        Table.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 90, 260, -1));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Password");
        Table.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 120, -1, -1));

        password.setText("123");
        Table.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 140, 260, -1));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Confirm Password");
        Table.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 170, -1, -1));

        cpassword.setText("321");
        Table.add(cpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 190, 260, -1));

        roleList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ROLE", "ADMIN", "USER" }));
        Table.add(roleList, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 230, 260, -1));

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        Table.add(registerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 270, -1, -1));

        actUsTa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Password", "Role", "Delete", "Update", "Deactivate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        actUsTa.getTableHeader().setReorderingAllowed(false);
        actUsTa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actUsTaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(actUsTa);
        if (actUsTa.getColumnModel().getColumnCount() > 0) {
            actUsTa.getColumnModel().getColumn(0).setResizable(false);
            actUsTa.getColumnModel().getColumn(0).setPreferredWidth(10);
            actUsTa.getColumnModel().getColumn(1).setResizable(false);
            actUsTa.getColumnModel().getColumn(2).setResizable(false);
            actUsTa.getColumnModel().getColumn(3).setResizable(false);
            actUsTa.getColumnModel().getColumn(4).setResizable(false);
            actUsTa.getColumnModel().getColumn(5).setResizable(false);
            actUsTa.getColumnModel().getColumn(6).setResizable(false);
        }

        Table.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 820, 260));

        inactiveUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Password", "ROLE", "Activate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inactiveUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inactiveUsersMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(inactiveUsers);
        if (inactiveUsers.getColumnModel().getColumnCount() > 0) {
            inactiveUsers.getColumnModel().getColumn(0).setResizable(false);
            inactiveUsers.getColumnModel().getColumn(1).setResizable(false);
            inactiveUsers.getColumnModel().getColumn(2).setResizable(false);
            inactiveUsers.getColumnModel().getColumn(3).setResizable(false);
            inactiveUsers.getColumnModel().getColumn(4).setResizable(false);
        }

        Table.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 500, 510, 260));

        buscarIdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarIdTxtActionPerformed(evt);
            }
        });
        buscarIdTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarIdTxtKeyPressed(evt);
            }
        });
        Table.add(buscarIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 196, -1));

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Buscar Usuario por ID");
        Table.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        buscarID.setText("Buscar");
        buscarID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarIDMouseClicked(evt);
            }
        });
        Table.add(buscarID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));
        Table.add(buscarNombreTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 200, -1));

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Buscar Usuario por nombre");
        Table.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        buscarNombre.setText("Buscar");
        buscarNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarNombreMouseClicked(evt);
            }
        });
        Table.add(buscarNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        jLabel1.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Usuarios Activos");
        Table.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 460, -1, -1));

        jLabel2.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Usuarios Inactivos");
        Table.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 470, -1, -1));

        showAllUsersBtn.setText("Mostrar Todos");
        showAllUsersBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showAllUsersBtnMouseClicked(evt);
            }
        });
        Table.add(showAllUsersBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 460, 120, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_user.png"))); // NOI18N
        Table.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 10, -1, -1));

        jLabel4.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Instrucciones");
        Table.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Editar usuario");
        Table.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel11.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        Table.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, 20));

        jLabel12.setFont(new java.awt.Font("Roboto Light", 3, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Update");
        Table.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 50, -1));

        jLabel13.setFont(new java.awt.Font("Roboto Light", 3, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Register");
        Table.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 60, -1));

        jLabel14.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Agregar un Usuario");
        Table.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel15.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Hacer doble click en el campo de la tabla que se desee editar.  Hacer click en el botón");
        Table.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, 20));

        jLabel16.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Llenar los campos username, Password, confirm password y seleccionar un rol para");
        Table.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, 20));

        jLabel17.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("para efectuar los cambios.");
        Table.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        jLabel18.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("el nuevo usuario. Hacer click en el botón");
        Table.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jLabel19.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Eliminar usuario");
        Table.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jLabel20.setFont(new java.awt.Font("Roboto Light", 3, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText(" Delete");
        Table.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 50, 20));

        jLabel21.setFont(new java.awt.Font("Roboto Light", 3, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("YES");
        Table.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 50, -1));

        jLabel22.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("en la ventana emergente para efectuar los cambios.");
        Table.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        jLabel23.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("del usuario que se desee eliminar. Hacer click en ");
        Table.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, -1, 20));

        jLabel24.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Hacer click en el botón");
        Table.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, 20));

        jLabel25.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Activar/Desactivar Usuario");
        Table.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        jLabel26.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Hacer click en el botón");
        Table.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, 20));

        jLabel27.setFont(new java.awt.Font("Roboto Light", 3, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText(" Activate/Deactivate");
        Table.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 130, 20));

        jLabel28.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("del usuario que se desee Activar/Desactivar");
        Table.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, -1, 20));

        jLabel29.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText(" Un usuario desactivado no podrá acceder al sistema.");
        Table.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        jLabel30.setFont(new java.awt.Font("Roboto Light", 3, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("NOTA:");
        Table.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 50, -1));

        add(Table, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));
    }// </editor-fold>//GEN-END:initComponents

    private void usernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyTyped
        char validate = evt.getKeyChar();

        if(!Character.isLetter(validate)){
            getToolkit().beep();

            evt.consume();

            JOptionPane.showMessageDialog(null, "Ingresar solo letras");
        }
    }//GEN-LAST:event_usernameKeyTyped

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        //Register new user
        ConnectionDB conexion = new ConnectionDB();
        conexion.getConnection();

        String username = this.username.getText();
        String pass = new String(password.getPassword());
        String cpass = new String(cpassword.getPassword());
        String role = String.valueOf(this.roleList.getSelectedItem());
        boolean exists = conexion.existingUser(username);

        if(Validations.userLength(username, pass)){
            if(!username.equals("admin")){
                //Validate if the username already exists
                if(exists){
                    //Create new user
                    if(pass.equals(cpass)){
                        if(!role.equals("ROLE")){
                            conexion.createUser(username, pass, role);
                            this.username.setText("");
                            this.password.setText("");
                            this.cpassword.setText("");
                            CargarTabla("SP_Search_Active_Users");
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Selecciona un Rol", null, JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden", null, JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Ya existe ese nombre de usuario");
                }
            }
        }

    }//GEN-LAST:event_registerButtonActionPerformed

    private void actUsTaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actUsTaMouseClicked

        int column = actUsTa.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY()/actUsTa.getRowHeight();

        if(row < actUsTa.getRowCount() && row >= 0 && column<actUsTa.getColumnCount() && column>=0){
            Object  value = actUsTa.getValueAt(row, column);
            Object id = actUsTa.getValueAt(row, 0);
            int id_User = (int) id;
            if(value instanceof JButton){
                ((JButton) value).doClick();
                JButton boton = (JButton) value;
                if(boton.getName().equals("btnDelete")){
                    //Query para borrar
                    int option = JOptionPane.showConfirmDialog(null, "Do you really want to delete this user?",
                        "Warning", JOptionPane.YES_NO_OPTION);
                    if(option == JOptionPane.YES_OPTION){
                        ConnectionDB con = new ConnectionDB();
                        con.deleteUserId(id_User);
                        CargarTabla("SP_Search_Active_Users");
                    }
                }
                else if(boton.getName().equals("btnUpdate")){
                    String nUsername = (String) actUsTa.getValueAt(row, 1);
                    String nPassword = (String) actUsTa.getValueAt(row, 2);
                    
                    ConnectionDB con = new ConnectionDB();
                    con.updateUser(nUsername, nPassword, id_User);
                    CargarTabla("SP_Search_Active_Users");
                }
                else if(boton.getName().equals("btnDeactivate")){
                    //query desactivar user
                    int option = JOptionPane.showConfirmDialog(null, "Do you really want to deactivate this user?",
                        "Warning", JOptionPane.YES_NO_OPTION);
                    if(option == JOptionPane.YES_OPTION){
                        ConnectionDB con = new ConnectionDB();
                        con.changeStatus(id_User);
                        CargarTabla("SP_Search_Active_Users");
                        loadInactiveUsers();
                    }
                }
            }
        }
    }//GEN-LAST:event_actUsTaMouseClicked

    private void buscarIdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarIdTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarIdTxtActionPerformed

    private void buscarIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarIDMouseClicked

        int id_user = Integer.parseInt(buscarIdTxt.getText());
        String consulta = "SELECT * FROM users WHERE id_user = "+id_user;
        CargarTabla(consulta);
    }//GEN-LAST:event_buscarIDMouseClicked

    private void inactiveUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inactiveUsersMouseClicked
        int column = inactiveUsers.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY()/inactiveUsers.getRowHeight();

        if(row < inactiveUsers.getRowCount() && row >= 0 && column<inactiveUsers.getColumnCount() && column>=0){
            Object  value = inactiveUsers.getValueAt(row, column);
            Object id = inactiveUsers.getValueAt(row, 0);
            int id_User = (int) id;
            if(value instanceof JButton){
                ((JButton) value).doClick();
                JButton boton = (JButton) value;
                if(boton.getName().equals("btnActivate")){
                    //Query para activar
                    int option = JOptionPane.showConfirmDialog(null, "Do you really want to reactivate this user?",
                        "Warning", JOptionPane.YES_NO_OPTION);
                    if(option == JOptionPane.YES_OPTION){
                        ConnectionDB con = new ConnectionDB();
                        con.changeStatus(id_User);
                        CargarTabla("SP_Search_Active_Users");
                        loadInactiveUsers();
                    }
                }
            }
        }
        
        
    }//GEN-LAST:event_inactiveUsersMouseClicked

    private void buscarIdTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarIdTxtKeyPressed
       char validate = evt.getKeyChar();

    //        if(!Character.isDigit(validate)){
    //            getToolkit().beep();
    //            evt.consume();
    //            JOptionPane.showMessageDialog(null, "Ingresar solo números");
    //        }
    }//GEN-LAST:event_buscarIdTxtKeyPressed

    private void showAllUsersBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showAllUsersBtnMouseClicked
        CargarTabla("SP_Search_Active_Users");
    }//GEN-LAST:event_showAllUsersBtnMouseClicked

    private void buscarNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarNombreMouseClicked
        String username = buscarNombreTxt.getText();
        String consulta = "SP_Search_User_Like '"+username+"'";
        
        buscarIdTxt.setText("");
        buscarNombreTxt.setText("");
        CargarTabla(consulta);
    }//GEN-LAST:event_buscarNombreMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Table;
    private javax.swing.JTable actUsTa;
    private javax.swing.JButton buscarID;
    private javax.swing.JTextField buscarIdTxt;
    private javax.swing.JButton buscarNombre;
    private javax.swing.JTextField buscarNombreTxt;
    private javax.swing.JPasswordField cpassword;
    private javax.swing.JTable inactiveUsers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton registerButton;
    private javax.swing.JComboBox<String> roleList;
    private javax.swing.JButton showAllUsersBtn;
    private javax.swing.JTextPane username;
    // End of variables declaration//GEN-END:variables
}
